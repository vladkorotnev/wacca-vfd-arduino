#include <rsrc.h>

const unsigned char bmp_wocao [] PROGMEM = {
    // 'wocao', 32x160px
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 
    0xf8, 0x3f, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 
    0xf8, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x03, 0xff, 0xf8, 0xc0, 0x00, 0xff, 
    0xf8, 0x38, 0x00, 0x1f, 0xf8, 0x0e, 0x00, 0x07, 0xf8, 0x03, 0x80, 0x01, 0xf8, 0x00, 0xe0, 0x00, 
    0xf8, 0x00, 0x38, 0x00, 0xf8, 0x00, 0x06, 0x00, 0xf8, 0x00, 0x01, 0x80, 0xf8, 0x00, 0x00, 0x61, 
    0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x01, 0xff, 
    0xf8, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x00, 0x3f, 
    0xff, 0xe0, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0xcf, 0xf8, 0x00, 0x07, 0x0f, 
    0xf8, 0x00, 0x1c, 0x0f, 0xf8, 0x00, 0x70, 0x0f, 0xf8, 0x01, 0xc0, 0x0f, 0xf8, 0x06, 0x00, 0x0f, 
    0xf8, 0x18, 0x00, 0x0f, 0xf8, 0x60, 0x00, 0x0f, 0xf9, 0x80, 0x00, 0x3f, 0xfe, 0x00, 0x01, 0xff, 
    0xfc, 0x00, 0x03, 0xff, 0xe6, 0x00, 0x00, 0xfb, 0xc1, 0x80, 0x00, 0x39, 0x00, 0x70, 0x00, 0x08, 
    0x00, 0xfc, 0x00, 0x08, 0x01, 0xff, 0x00, 0x08, 0x07, 0xff, 0xc0, 0x08, 0x0f, 0xff, 0xf0, 0x08, 
    0x1f, 0xf8, 0x0c, 0x0c, 0x3f, 0xe0, 0x03, 0x0e, 0x7f, 0x80, 0x00, 0xcf, 0x7f, 0x03, 0xe0, 0x7f, 
    0xfe, 0x18, 0x0c, 0x3f, 0xfc, 0x20, 0x02, 0x1f, 0xf8, 0x40, 0x01, 0x0f, 0xf8, 0x80, 0x00, 0x8f, 
    0xf0, 0x03, 0xe0, 0x07, 0xf1, 0x07, 0xf0, 0x47, 0xf0, 0x0f, 0xf8, 0x07, 0xf2, 0x0f, 0xfc, 0x23, 
    0xe2, 0x1f, 0xfc, 0x23, 0xe2, 0x1f, 0xfc, 0x23, 0xe2, 0x1f, 0xfc, 0x23, 0xf0, 0x0f, 0xf8, 0x03, 
    0xf1, 0x07, 0xf8, 0x47, 0xf1, 0x07, 0xf0, 0x47, 0xf8, 0x87, 0xf0, 0x87, 0xf8, 0x07, 0xf0, 0x0f, 
    0xfc, 0x04, 0x10, 0x1f, 0xfc, 0x04, 0x10, 0x1f, 0xfe, 0x04, 0x10, 0x3f, 0x7f, 0x87, 0xf0, 0x7f, 
    0x3e, 0xc4, 0x11, 0xbe, 0x3c, 0x3c, 0x1e, 0x1e, 0x1c, 0x4c, 0x19, 0x1c, 0x08, 0x03, 0xe0, 0x88, 
    0x08, 0x8f, 0xf8, 0x88, 0x08, 0x0f, 0xf8, 0x08, 0x11, 0x1f, 0xfc, 0x40, 0x91, 0x1f, 0xfc, 0x40, 
    0xd1, 0x1f, 0xfc, 0x41, 0xf1, 0x1f, 0xfc, 0x47, 0xf1, 0x1f, 0xfc, 0x47, 0xf8, 0x8f, 0xf8, 0x8f, 
    0xf8, 0x87, 0xf0, 0x8f, 0xf8, 0x43, 0xe1, 0x0f, 0xfc, 0x03, 0xe0, 0x1f, 0xfe, 0x03, 0xe0, 0x3f, 
    0xfe, 0x03, 0xe0, 0x3f, 0xff, 0x03, 0xe0, 0x7f, 0xff, 0xc3, 0xe1, 0xcf, 0xff, 0xf3, 0xe7, 0x0f, 
    0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xfe, 0x00, 0x0f, 
    0xff, 0xf8, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x3f, 0xfe, 0x00, 0x01, 0xff, 
    0xfc, 0x00, 0x03, 0xff, 0xe6, 0x00, 0x00, 0xff, 0x81, 0xc0, 0x00, 0x3f, 0x00, 0x70, 0x00, 0x0f, 
    0x00, 0x1c, 0x00, 0x0f, 0x00, 0x03, 0x00, 0x0f, 0xc0, 0x00, 0xc0, 0x0f, 0xf0, 0x00, 0x30, 0x0f, 
    0xfc, 0x00, 0x0c, 0x0f, 0xff, 0x00, 0x03, 0x0f, 0xff, 0xc0, 0x00, 0xef, 0xff, 0xf0, 0x00, 0x3f, 
    0xff, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xf8, 0x0f, 
    0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char bmp_tanoc [] PROGMEM = {
	// 'tanoc', 32x160px
	0xff, 0xe0, 0x0f, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x0f, 0xe0, 0xff, 0xfe, 0x3f, 0xf8, 0x7f, 
	0xfc, 0xff, 0xfe, 0x3f, 0xf9, 0xef, 0xff, 0x1f, 0xf1, 0xe7, 0xff, 0x9f, 0xf3, 0xc7, 0xff, 0x8f, 
	0xe7, 0xc7, 0xff, 0xcf, 0xe7, 0xff, 0xff, 0xcf, 0xe7, 0xe0, 0x01, 0xe7, 0xe7, 0xe7, 0xf9, 0xe7, 
	0xef, 0xef, 0xf9, 0xe7, 0xef, 0xef, 0xf9, 0xe7, 0xff, 0xef, 0xf9, 0xe7, 0xff, 0xe0, 0x01, 0xe7, 
	0xff, 0xf8, 0x01, 0xc7, 0xff, 0xef, 0xff, 0xcf, 0xff, 0xe7, 0xff, 0xcf, 0xff, 0x87, 0xff, 0x9f, 
	0xff, 0xc7, 0xff, 0x1f, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf8, 0xff, 
	0xff, 0xff, 0xc1, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x1b, 0xff, 0xff, 0xfc, 0x38, 0xff, 0xff, 0xff, 0x78, 0x7f, 0xff, 
	0xff, 0x78, 0x7f, 0xff, 0xff, 0x78, 0x7f, 0xff, 0xfc, 0x3c, 0x7f, 0xff, 0xfc, 0x1c, 0x7f, 0xff, 
	0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 
	0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x00, 0x3f, 
	0xff, 0xfc, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0x9c, 0x7f, 0xff, 
	0xff, 0x1c, 0x7f, 0xff, 0xfc, 0x3c, 0x7f, 0xff, 0xfc, 0xbc, 0x7f, 0xff, 0xfc, 0x3c, 0x7f, 0xff, 
	0xfe, 0x3e, 0x7f, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xdc, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x3f, 
	0xff, 0xfc, 0x71, 0xff, 0xff, 0xfc, 0x71, 0xff, 0xff, 0xfc, 0x71, 0xff, 0xff, 0xfc, 0x31, 0xff, 
	0xff, 0xfe, 0x31, 0xff, 0xff, 0xff, 0x11, 0xff, 0xff, 0xff, 0x19, 0xff, 0xff, 0xff, 0x89, 0xff, 
	0xff, 0xff, 0x87, 0xff, 0xfc, 0x1f, 0xc3, 0xff, 0xfc, 0x3f, 0xe3, 0xff, 0xfd, 0x7f, 0xf1, 0xff, 
	0xfd, 0x3f, 0xf0, 0xff, 0xfc, 0x1f, 0xf8, 0xff, 0xfc, 0x1f, 0xfc, 0x7f, 0xfc, 0xdf, 0xfc, 0x3f, 
	0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xbf, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x3f, 
	0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xfc, 0x1c, 0x7f, 0xff, 0xfc, 0x1c, 0x3f, 0xff, 
	0xfd, 0xde, 0x1f, 0xff, 0xfd, 0xdf, 0x1f, 0xff, 0xfd, 0x9f, 0x0f, 0xff, 0xfc, 0x9f, 0x87, 0xff, 
	0xfc, 0x1f, 0xc7, 0xff, 0xfe, 0x3f, 0xe3, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xf0, 0xff, 
	0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfe, 0x3f, 
	0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x3f, 
	0xfc, 0x1e, 0x00, 0x3f, 0xfc, 0x1f, 0xff, 0xff, 0xfd, 0xde, 0x00, 0x3f, 0xfd, 0xdc, 0x00, 0x3f, 
	0xfd, 0xdc, 0x00, 0x3f, 0xfc, 0x9c, 0x63, 0x3f, 0xfc, 0x9c, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 
	0xff, 0xfc, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 
	0xff, 0xfc, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 0xff, 0xfc, 0x42, 0x3f, 
	0xff, 0xfc, 0x42, 0x3f, 0xfc, 0x3c, 0x42, 0x3f, 0xfc, 0x1c, 0x42, 0x3f, 0xfd, 0x9c, 0x42, 0x3f, 
	0xfd, 0xdc, 0x42, 0x3f, 0xfd, 0xdc, 0x63, 0x3f, 0xfd, 0xdc, 0x00, 0x3f, 0xfc, 0x1c, 0x00, 0x3f, 
	0xfc, 0x1e, 0x00, 0x3f, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 
	0xff, 0xe3, 0x1f, 0xff, 0xff, 0xe3, 0x1f, 0xff, 0xff, 0xe7, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 
	0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xfc, 0x00, 0x3f, 
	0xfc, 0x1c, 0x00, 0x3f, 0xfc, 0x1c, 0x7e, 0x3f, 0xfd, 0x7c, 0x7e, 0x3f, 0xfd, 0x3c, 0x7e, 0x3f, 
	0xfd, 0x1c, 0x7e, 0x3f, 0xfc, 0x1c, 0x7e, 0x3f, 0xfc, 0x5c, 0x7e, 0x3f, 0xff, 0xfc, 0x7e, 0x3f, 
	0xff, 0xfc, 0x7e, 0x3f, 0xff, 0xfc, 0x7e, 0x3f, 0xff, 0xfc, 0x7e, 0x3f, 0xff, 0xfc, 0x7f, 0xff, 
	0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 
	0xff, 0xfc, 0x7f, 0xff, 0xfc, 0x1c, 0x7f, 0xff, 0xfc, 0x1c, 0x7f, 0xff, 0xfd, 0x58, 0x7f, 0xff, 
	0xfd, 0x58, 0x7f, 0xff, 0xfd, 0x58, 0xff, 0xff, 0xfd, 0xdb, 0xff, 0xff, 0xfd, 0xdf, 0xff, 0xff
};

img_data_t IMG_WOCAO = {
    true,
    bmp_wocao,
    160,
    4, // 32pix div 8bit
    true
};

img_data_t IMG_TANOC = {
    true,
    bmp_tanoc,
    160,
    4, // 32pix div 8bit
    true
};

size_t img_offset_at(img_data_t * image, uint16_t left, uint8_t top) {
   return left * image->height_strides + top;
}

img_data_t img_invert(img_data_t * image) {
    img_data_t new_data = {
        image->is_progmem,
        image->data,
        image->width_pixels,
        image->height_strides,
        !image->inverse
    };
    return new_data;
}
